/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7  
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     icoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         1;

deltaT          1E-4;

adjustTimeStep  yes;

maxCo           0.5;

writeControl    runTime;

writeInterval   0.1;

purgeWrite      0;

writeFormat     binary;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   8;

runTimeModifiable true;



libs
(
 "libutilityFunctionObjects.so"
 //"libOneDimensionalFWallModel2.so"
 );


functions
{


    
//    #includeFunc wallShearStress
//    #includeFunc yPlus

//    #include "raw_planes"
    #include "vtk_planes"


    fieldMinMax1
    {
        type            fieldMinMax;
        libs            ("libfieldFunctionObjects.so");

        fields          (U);

        location   yes;

        mode            magnitude; 
    }

    
     rhofunc
   {
      type                 writeObjects;
      libs            ("libutilityFunctionObjects.so");
      writeControl        writeTime;
      //writeInterval       1;
      objects
      ("rho");
   }



    scalar1
    {
        type            scalarTransport;
        libs            ("libsolverFunctionObjects.so");
        field           s1;
        phi             phi;
        phase           none;
        resetOnStartUp  no;
        D               1.5E-5; //this is probably not correct
        nut             none;
    }



    isoSurfs
    {
        type            surfaces;
        libs ("libsampling.so");
        writeControl    runTime;
        writeInterval   0.025;
        surfaceFormat   vtk;
        fields          (U);

        interpolationScheme cellPoint;

        surfaces
        (
            s1_01
            {
                type            isoSurface;
                isoField        s1;
                isoValue        0.1;
                interpolate     true;
            }




            
            s1_002
            {
                type            isoSurface;
                isoField        s1;
                isoValue        0.02;
                interpolate     true;
            }
        

            

            
            s1_0005
            {
                type            isoSurface;
                isoField        s1;
                isoValue        0.005;
                interpolate     true;
            }



        );
    }
   



}



// ************************************************************************* //
