/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7  
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    
    "aisle.*"
    {
        type noSlip;
    }
    
    "human.*"
    {
        type noSlip;
    }

    "mouth.*"
    {
        type codedFixedValue; 
        value uniform (0 0 0); 
        redirectType   diskInlet;
        code 
        #{ 
        
            scalar U = 8.0; //peak velocity
            scalar pulse_duration = 0.3; //s

  
            scalar twoPi = 3.14*2;
            scalar f = 0.5/pulse_duration;

            fixedValueFvPatchVectorField myPatch(*this);

            scalar t = this->db().time().value();
            

            scalar u = 0.0;
            
            if (t <= pulse_duration){
                u = U * sin(twoPi * t * f); 
            }
            


            const vectorField n(this->patch().nf());
            vector dir(1.0, 0.0, 0.0);

            auto val = u * dir & n;
            
            operator==(val*n); //no idea why there has to be a negative sign here
            //operator==(myPatch);


        #}; 

    }


    z0
    {
        type noSlip;
    }

    z1
    {
        type noSlip;
    }

    "x.*"
    {
        type cyclicAMI;
        value   $internalField;
    }

    "y.*"
    {
        type cyclicAMI;
        value   $internalField;
    }


    
}

// ************************************************************************* //
